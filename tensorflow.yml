################################################################################
# This file consists of three main sections:
#   1. vars - variables used throughout the playbook are defined here. If you want to change packages or version, this is the place to do it.
#   2. tasks - these are the steps that will be executed by the playbook. This is a straightforward, sequential playbook.
#   3. handlers - these steps run only in response to specific events. If the event does not occur, the handler does not run.
################################################################################
---
- hosts: test # Alternatively, 'canary', 'blue'|'green', 'all' according to your deployment strategy and your /etc/ansible/hosts file
  become: yes # All commands must run as root
  strategy: free # Allows all hosts to run to the end of the playbook as fast as they can
  vars_files:
    - secrets.yml

  vars:
    jupyter:
      container_name: jupyter
      image:
        name: tensorflow/tensorflow
        tag: 1.12.0-gpu-py3
      published_ports:
        - 8888:8888
      volumes: "{{ secrets.volumes }}"

    rsync:
      data_folder:
        src: /home/ldavis/data
        dest: /home/ldavis
      master: ml1
      options:
        - "-e ssh"
        - "--no-motd"

  tasks:
    # General Dependencies
    - include_role:
        name: packages
      tags:
        - packages

    # Rsync Server Setup
    - include_role:
        name: rsync
      tags:
        - rsync
      when: inventory_hostname == rsync.master

    # General Docker setup
    - include_role:
        name: docker
      tags:
        - docker
      vars:
        users: "{{ secrets.users }}"

    # CUDA Driver Setup
    - include_role:
        name: cuda
      tags:
        - cuda

    # NVIDIA-Docker Runtime Setup
    - include_role:
        name: nvidia
      tags:
        - nvidia
      vars:
        docker:
          service_name: docker

    # Launch Jupyter Container in Docker
    - name: pull the Tensorflow GPU image
      docker_image:
        name: "{{ jupyter.image.name }}"
        state: present
        tag: "{{ jupyter.image.tag }}"
      tags:
        - jupyter

    - name: start the Jupyter container
      docker_container:
        auto_remove: yes
        debug: no
        detach: yes
        env:
          PASSWORD: "{{ secrets.jupyter_password }}"
        image: "{{ jupyter.image.name }}:{{ jupyter.image.tag }}"
        name: "{{ jupyter.container_name }}"
        published_ports: "{{ jupyter.published_ports }}"
        pull: no
        read_only: no
        restart_policy: "no"
        state: started
        volumes: "{{ jupyter.volumes }}"
      tags:
        - jupyter

    # Synchronize the data folder across hosts
    - name: synchronize the data folder
      delegate_to: "{{ rsync.master }}"
      synchronize:
        src: "{{ rsync.data_folder.src }}"
        dest: "{{ rsync.data_folder.dest }}"
        rsync_opts: "{{ rsync.options }}"
        use_ssh_args: yes
      tags:
        - data
      when: inventory_hostname != rsync.master

  handlers:
    - name: restart the rsync service
      systemd:
        name: "{{ rsync.service_name }}"
        state: restarted
